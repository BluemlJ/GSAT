package gui;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedList;

import analysis.AnalysedSequence;
import analysis.Pair;
import exceptions.ConfigNotFoundException;
import exceptions.ConfigReadException;
import io.Config;
import io.ConsoleIO;
import io.FileSaver;
import javafx.scene.control.TextField;

public class GUIUtils {

  public static void runAnalysis() {


  }

  private static void addGenetoSequence(AnalysedSequence toAnalysedSequence, String GeneID) {

  }

  private static void runTrimming(AnalysedSequence toAnalysedSequence) {

  }

  private static void runMutationAnalysis(AnalysedSequence toAnalysedSequence) {

  }

  private static void runDocumentation(AnalysedSequence toAnalysedSequence) {

  }

  private static Pair<Pair<LinkedList<File>, LinkedList<File>>, Pair<Boolean, String>> getSequencesFromSourceFolder(
      TextField source) {
    String report = "Reading Sequences unsuccessfull with unknown error";
    boolean success = false;

    LinkedList<File> files = null;
    LinkedList<File> oddFiles = null;

    io.SequenceReader.configurePath(source.getText());
    Pair<LinkedList<File>, LinkedList<File>> fileLists = io.SequenceReader.listFiles();
    files = fileLists.first;
    oddFiles = fileLists.second;

    if (files.isEmpty()) {
      report = "No AB1 files were found at the given path.";
    } else {
      report = "Reading sequences successfull";
      success = true;
    }

    Pair<LinkedList<File>, LinkedList<File>> one =
        new Pair<LinkedList<File>, LinkedList<File>>(files, oddFiles);
    Pair<Boolean, String> two = new Pair<Boolean, String>(success, report);

    return new Pair<Pair<LinkedList<File>, LinkedList<File>>, Pair<Boolean, String>>(one, two);
  }

  private static Pair<Boolean, String> setDestination(TextField destination) {
    boolean success = false;
    String report = "Reading destinationpath was unsuccessfull.";
    String path = null;
    try {
      path = ConsoleIO.readLine(destination.getText());
      success = true;
      report = "Reading destinationpath successfull.";
    } catch (IOException e) {
      report = "Reading destinationpath unsuccessfull, IOExeption";
      e.printStackTrace();
    }
    // set destination path for database entries
    FileSaver.setLocalPath(path);
    return new Pair<Boolean, String>(success, report);
  }



  private static Pair<Boolean, String> runConfiguration(TextField configpath) {
    Config.setPath(configpath.getText());
    boolean success = false;
    String report = "Reading configfile unsuccessfull with unknown error";
    try {
      Config.readConfig();
      success = true;
      report = "Reading configfile successfull";
    } catch (ConfigReadException e) {
      report = "An error occured while reading the configuration file.";
    } catch (ConfigNotFoundException e) {
      report = "No configuration file was found at the given path.";
    } catch (IOException e) {
      System.out.println("Error during reading occurred.");
    }
    return new Pair<Boolean, String>(success, report);
  }
}


